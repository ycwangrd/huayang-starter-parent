<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huayang.product.generator.mapper.GenTableColumnMapper">
    
    <resultMap type="com.huayang.product.generator.domain.GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
        <result property="isInsert"       column="is_insert"      />
        <result property="isEdit"         column="is_edit"        />
        <result property="isList"         column="is_list"        />
        <result property="isQuery"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>
	
	<sql id="selectGenTableColumnVo">
        select column_id,
               table_id,
               column_name,
               column_comment,
               column_type,
               java_type,
               java_field,
               is_pk,
               is_increment,
               is_required,
               is_insert,
               is_edit,
               is_list,
               is_query,
               query_type,
               html_type,
               dict_type,
               sort,
               create_by,
               create_time,
               update_by,
               update_time
        from gen_table_column
    </sql>

    <select id="selectDbColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="mysql">
        select column_name,
               (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' end) as is_required,
               (case when column_key = 'PRI' then '1' else '0' end)                 as is_pk,
               ordinal_position                                                     as sort,
               column_comment,
               (case when extra = 'auto_increment' then '1' else '0' end)           as is_increment,
               column_type
        from information_schema.columns
        where table_schema = (select database())
          and table_name = (#{tableName})
        order by ordinal_position
    </select>
    <select id="selectDbColumnsByName" parameterType="String" resultMap="GenTableColumnResult" databaseId="postgresql">
        select col.column_name, (case when (col.is_nullable = 'no' ) then '1' end) as is_required,
                (CASE WHEN col.column_name in (
                    SELECT column_name FROM information_schema."constraint_column_usage" WHERE "constraint_name" = (
                        SELECT constraint_name FROM information_schema."table_constraints" tc 
                        WHERE "constraint_schema" =#{schemaName} AND table_name='sys_user' AND "constraint_type" ='PRIMARY KEY'
                    )
                ) THEN '1' ELSE '0' END ) as is_pk,
                col.ordinal_position as sort, '0' as is_increment, pd.description as column_comment
                from information_schema.columns col
                JOIN pg_class pc ON pc.relname = col.table_name
                LEFT JOIN pg_description pd ON pd.objoid = pc.oid AND pd.objsubid = col.ordinal_position
                where table_schema = #{schemaName}
          and table_name = (#{tableName})
        order by ordinal_position
    </select>
</mapper>